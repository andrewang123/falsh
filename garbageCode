	/*		int i = 0;
			if(strcmp(token, ">") != 0 && i == 0) // failture ie hello there >
			{	
				printf("second element should be a >\n");
				return 1;
			
		//		printf("missing filename\n");
		//		return 1; // failed because no filename
			} else if (token == NULL) {
				printf("Missing filename\n");
				return 1;
			} else {
				printf("FAIL HERE");
//				return 1;
				//strcpy(fileName, keepMoving);
			} */

/*	

//	if (filename == NULL)
//		return 1;
	int pid, status;
	int newFd; // new file descriptor
	char *cmd[] = { "/bin/ls", NULL };
	int other;
	char * outFile = "testing.out";
	if (newFd = open(outFile, O_CREAT|O_TRUNC|O_WRONLY, 0644) < 0)
	{
		printf("error");
	}
			
	
	int rc = fork();
	if (rc < 0)
	{
		printf("Error Creating Process");		
	} else if (rc == 0) // child
	{
		execvp(cmd[0], cmd);	
	
		dup2(newFd, STDOUT_FILENO); // newFd becomes standard output
		close(newFd);
	} else if (rc > 0) // parent
	{
		while(wait(&status) != -1); // pick up zombie children
	}

	return 0;
*/

